info_en: "[compaction]"
info_cn: "[合并问题]"
command: obdiag gather scene run --scene=observer.compaction
task:
  - version: "[2.0.0.0, 4.0.0.0]"
    steps:
      - type: sql
        sql: "show variables like 'version_comment';"
        global: true
      - type: sql
        sql: "SELECT * FROM oceanbase.v$ob_cluster"
        global: true
      - type: sql
        sql: "SELECT * FROM oceanbase.__all_zone WHERE name='idc';"
        global: true
      - type: sql
        sql: "SELECT id,svr_ip,svr_port,zone,inner_port,with_rootserver,status,start_service_time,last_offline_time FROM  oceanbase.__all_server;"
        global: true
      - type: sql
        sql: "SELECT zone, concat(svr_ip, ':', svr_port) observer, cpu_capacity, cpu_total, cpu_assigned, cpu_assigned_percent, mem_capacity, mem_total, mem_assigned, mem_assigned_percent, unit_Num, round(`load`, 2) `load`, round(cpu_weight, 2) cpu_weight, round(memory_weight, 2) mem_weight, leader_count FROM oceanbase.__all_virtual_server_stat ORDER BY zone,svr_ip;"
        global: true
      - type: sql
        sql: "show parameters like '%enable_manual_merge%';"
        global: true
      - type: sql
        sql: "show parameters like '%zone_merge_concurrency%';"
        global: true
      - type: sql
        sql: "show parameters like '%zone_merge_order%';"
        global: true
      - type: sql
        sql: "show parameters like '%enable_merge_by_turn%';"
        global: true
      - type: sql
        sql: "show parameters like '%major_freeze_duty_time%';"
        global: true
      - type: sql
        sql: "show parameters like '%enable_auto_leader_switch%';"
        global: true
      - type: sql
        sql: "select * from oceanbase.__all_zone;"
        global: true
      - type: sql
        sql: "select * from oceanbase.__all_virtual_replica_task;"
        global: true
      - type: sql
        sql: "select * from oceanbase.__all_virtual_rebalance_task_stat;"
        global: true
      - type: sql
        sql: "select * from oceanbase.__all_virtual_sys_task_status;"
        global: true
      - type: sql
        sql: "select * from oceanbase.__all_virtual_partition_compaction_progress;"
        global: true
      - type: sql
        sql: "select * from oceanbase.__all_freeze_schema_version where schema_version = -1;"
        global: true
      - type: sql
        sql: "select tenant_id, table_id, partition_id from oceanbase.__all_virtual_partition_table group by 1,2,3 having min(role) = 2;"
        global: true
      - type: sql
        sql: "SELECT count(*),svr_ip FROM oceanbase.__all_virtual_clog_stat WHERE is_in_sync = 0 AND is_offline = 0 AND replica_type != 16 group by svr_ip;"
        global: true
      - type: sql
        sql: "SELECT * FROM oceanbase.__all_virtual_clog_stat WHERE is_in_sync = 0 AND is_offline = 0 AND replica_type != 16  limit 10;"
        global: true
      - type: sql
        sql: "select * from oceanbase.__all_virtual_tenant_memstore_info where (active_memstore_used > major_freeze_trigger) or (total_memstore_used > memstore_limit);"
        global: true
      - type: sql
        sql: "select * from oceanbase.__all_rootservice_event_history where module = 'daily_merge' and event like '%merge_error%' order by gmt_create desc limit 5;"
        global: true
      - type: sql
        sql: "select * from oceanbase.__all_virtual_meta_table where data_version != (select value from oceanbase.__all_zone where name='global_broadcast_version') limit 10;"
        global: true
      - type: sql
        sql: "SELECT count(1) FROM oceanbase.__all_virtual_trans_stat WHERE part_trans_action<=2 AND ctx_create_time < date_sub(now(), INTERVAL 600 SECOND) AND is_exiting != 1;"
        global: true
      - type: sql
        sql: "SELECT count(1) FROM oceanbase.__all_virtual_trans_stat WHERE part_trans_action > 2 AND ctx_create_time < date_sub(now(), INTERVAL 600 SECOND) AND is_exiting != 1;"
        global: true
      - type: sql
        sql: "(select table_id, partition_idx from oceanbase.__all_virtual_election_info group by table_id, partition_idx) except (select table_id, partition_idx from oceanbase.__all_virtual_election_info where role = 1)"
        global: true
      - type: sql
        sql: "(select table_id, partition_idx from oceanbase.__all_virtual_clog_stat group by table_id, partition_idx) except (select table_id, partition_idx from oceanbase.__all_virtual_clog_stat where role = 'LEADER') ;"
        global: true
      - type: sql
        sql: "SELECT svr_ip,total_size / 1024 / 1024 / 1024 total_G,free_size / 1024 / 1024 / 1024 free_G,(total_size - free_size) / 1024 / 1024 / 1024 used_G,(total_size - free_size) / total_size used_percentage FROM oceanbase.__all_virtual_disk_stat;"
        global: true
      - type: log
        grep: ""
        global: false
  - version: "[4.0.0.0, *]"
    steps:
      - type: sql
        sql: "show variables like 'version_comment';"
        global: true
      - type: sql
        sql: "SELECT * FROM oceanbase.DBA_OB_ZONES;"
        global: true
      - type: sql
        sql: "SELECT * FROM oceanbase.DBA_OB_SERVERS;"
        global: true
      - type: sql
        sql: "SELECT * FROM oceanbase.GV$OB_SERVERS;"
        global: true
      - type: sql
        sql: "SELECT * FROM oceanbase.DBA_OB_UNIT_CONFIGS;"
        global: true
      - type: sql
        sql: "SELECT * FROM oceanbase.DBA_OB_RESOURCE_POOLS;"
        global: true
      - type: sql
        sql: "SELECT * FROM oceanbase.DBA_OB_TENANTS;"
        global: true
      - type: sql
        sql: "SELECT c.TENANT_ID, e.TENANT_NAME, concat(c.NAME, ': ', d.NAME) `pool:conf`,concat(c.UNIT_COUNT, ' unit: ', d.min_cpu, 'C/', ROUND(d.MEMORY_SIZE/1024/1024/1024,0), 'G') unit_info FROM oceanbase.DBA_OB_RESOURCE_POOLS c, oceanbase.DBA_OB_UNIT_CONFIGS d, oceanbase.DBA_OB_TENANTS e WHERE c.UNIT_CONFIG_ID=d.UNIT_CONFIG_ID AND c.TENANT_ID=e.TENANT_ID AND c.TENANT_ID>1000 ORDER BY c.TENANT_ID;"
        global: true
      - type: sql
        sql: "SELECT a.TENANT_NAME,a.TENANT_ID,b.SVR_IP FROM oceanbase.DBA_OB_TENANTS a, oceanbase.GV$OB_UNITS b WHERE a.TENANT_ID=b.TENANT_ID;"
        global: true
      - type: sql
        sql: "show parameters like '%merge%';"
        global: true
      - type: sql
        sql: "show parameters like 'memstore_limit_percentage';"
        global: true
      - type: sql
        sql: "show parameters like 'freeze_trigger_percentage';"
        global: true
      - type: log
        global: false
        grep: ""
